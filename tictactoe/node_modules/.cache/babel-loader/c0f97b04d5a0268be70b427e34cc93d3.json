{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HI10\\\\Documents\\\\VincentV\\\\BNPTTT\\\\New folder\\\\tic-tac-toe\\\\src\\\\components\\\\tictactoe.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport Grid from \"./grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TicTacToe = props => {\n  _s();\n\n  const gridArray = props.board;\n  const [isFirstPlayerTurn, setFirstPlayerTurn] = useState(true);\n  useEffect(() => {\n    if (props.winner != null) {\n      let message;\n      message = \"The winner is that player that played with \" + props.winner;\n      window.alert(message);\n    }\n  });\n\n  const onTilePress = index => {\n    gridArray[index] = isFirstPlayerTurn ? 1 : 2;\n    setFirstPlayerTurn(!isFirstPlayerTurn);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    gridArray: gridArray.current,\n    onTilePress: onTilePress\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TicTacToe, \"Tx00M8AJoPLt+yc3ZNPG7IavuYE=\");\n\n_c = TicTacToe;\nexport default TicTacToe;\n\nvar _c;\n\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"sources":["C:/Users/HI10/Documents/VincentV/BNPTTT/New folder/tic-tac-toe/src/components/tictactoe.js"],"names":["useEffect","useRef","useState","Grid","TicTacToe","props","gridArray","board","isFirstPlayerTurn","setFirstPlayerTurn","winner","message","window","alert","onTilePress","index","current"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAEzB,QAAMC,SAAS,GAAGD,KAAK,CAACE,KAAxB;AACA,QAAM,CAACC,iBAAD,EAAoBC,kBAApB,IAA0CP,QAAQ,CAAC,IAAD,CAAxD;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGK,KAAK,CAACK,MAAN,IAAe,IAAlB,EAAwB;AACpB,UAAIC,OAAJ;AACAA,MAAAA,OAAO,GAAG,gDAAgDN,KAAK,CAACK,MAAhE;AACAE,MAAAA,MAAM,CAACC,KAAP,CAAaF,OAAb;AACH;AACJ,GANQ,CAAT;;AAQA,QAAMG,WAAW,GAAIC,KAAD,IAAW;AAC3BT,IAAAA,SAAS,CAACS,KAAD,CAAT,GAAmBP,iBAAiB,GAAG,CAAH,GAAO,CAA3C;AACAC,IAAAA,kBAAkB,CAAC,CAACD,iBAAF,CAAlB;AACH,GAHD;;AAIA,sBACI,QAAC,IAAD;AACA,IAAA,SAAS,EAAEF,SAAS,CAACU,OADrB;AAEA,IAAA,WAAW,EAAEF;AAFb;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAvBD;;GAAMV,S;;KAAAA,S;AAyBN,eAAeA,SAAf","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport Grid from \"./grid\";\r\n\r\nconst TicTacToe = (props) => {\r\n\r\n    const gridArray = props.board;\r\n    const [isFirstPlayerTurn, setFirstPlayerTurn] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if(props.winner!= null) {\r\n            let message;\r\n            message = \"The winner is that player that played with \" + props.winner;\r\n            window.alert(message);\r\n        }\r\n    });\r\n\r\n    const onTilePress = (index) => {\r\n        gridArray[index] = isFirstPlayerTurn ? 1 : 2;\r\n        setFirstPlayerTurn(!isFirstPlayerTurn);\r\n    }\r\n    return(\r\n        <Grid\r\n        gridArray={gridArray.current}\r\n        onTilePress={onTilePress}\r\n        />\r\n    );\r\n}\r\n\r\nexport default TicTacToe;"]},"metadata":{},"sourceType":"module"}